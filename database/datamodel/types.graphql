type User {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  # Info

  auth0Id: String! @unique
  username: String! @unique
  email: String! @unique
  email_verified: Boolean! @default(value: false)

  # Meta

  name: String
  gender: Gender!
  bio: String!
  picture: File @relation(name: "UserPicture", onDelete: CASCADE)
  price: Float @default(value: "10")
  live: Lesson

  # Subscriptions

  subscriptions: [TeacherSubscription!]! @relation(name: "TeacherSubscription")
  subscribers: [TeacherSubscription!]! @relation(name: "TeacherSubscriber")

  # Stripe

  stripeId: String @unique
  stripeCustomerId: String @unique

  # Social

  messages: [Message!]! @relation(name: "UserMessage", onDelete: CASCADE)

  # Settings

  receiveNotifications: Boolean! @default(value: "true")

  # System

  archived: Boolean! @default(value: "false")
}

type TeacherSubscription {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  teacher: User! @relation(name: "TeacherSubscription")
  subscriber: User! @relation(name: "TeacherSubscriber")
}

type Lesson {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  # Info

  name: String!
  description: String!
  thumbnail: String!
  schedule: DateTime!
  premium: Boolean! @default(value: "false")

  course: Course @relation(name: "CourseLesson")

  # Stream

  streamKey: String!

  # Extras

  messages: [Message!]! @relation(name: "LessonMessage", onDelete: CASCADE)
  files: [File!]! @relation(name: "LessonFile", onDelete: CASCADE)

  # System

  archived: Boolean! @default(value: "false")
}

type Course {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  # Meta
  name: String!
  lessons: [Lesson!]! @relation(name: "CourseLesson", onDelete: SET_NULL)

  # System
  archived: Boolean! @default(value: "false")
}

type File {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!
  secret: String! @unique
  contentType: String!

  # Connections
  lesson: Lesson @relation(name: "LessonFile", onDelete: SET_NULL)

  # System
  archived: Boolean! @default(value: "false")
}

type Message {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  text: String!

  sender: User! @relation(name: "UserMessage", onDelete: SET_NULL)
  lesson: Lesson! @relation(name: "LessonMessage", onDelete: SET_NULL)

  # System
  archived: Boolean! @default(value: "false")
}
